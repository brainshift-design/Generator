// class   OpFilter
// extends OperatorBase
// {
//     paramCondition;
//     paramLoop;



//     constructor()
//     {
//         super(FILTER, 'filter', 'filter', iconFilter);

//         this.canDisable  = true;
//         // this.iconOffsetY = 1;
        

//         this.addInput (new Input (LIST_VALUES));
//         this.addOutput(new Output([LIST_VALUE], this.output_genRequest));

//         this.addParam(this.paramCondition = new NumberParam('start', 'start', true, true, true, 0, 0));
//         this.addParam(this.paramLoop      = new NumberParam('end',   'end',   true, true, true, 0, 0));


//         this.paramCondition.controls[0].allowEditDecimals = false;
//         this.paramLoop     .controls[0].allowEditDecimals = false;
//     }



//     output_genRequest(gen)
//     {
//         // 'this' is the output

//         gen.scope.push({
//             nodeId:  this.node.id, 
//             paramId: NULL });

//         const [request, ignore] = this.node.genRequestStart(gen);
//         if (ignore) return request;

        
//         const input = this.node.inputs[0];


//         request.push(input.connected ? 1 : 0);
        
//         if (input.connected)
//             request.push(...pushInputOrParam(input, gen));

//         request.push(...this.node.paramCondition.genRequest(gen));
//         request.push(...this.node.paramLoop     .genRequest(gen));

        
//         gen.scope.pop();
//         pushUnique(gen.passedNodes, this.node);

//         return request;
//     }



//     updateValues(requestId, actionId, updateParamId, paramIds, values)
//     {
//         super.updateValues(requestId, actionId, updateParamId, paramIds, values);


//         const length = values[paramIds.findIndex(id => id == 'length')];

//         if (length.value > 0)
//         {
//             this.paramCondition.controls[0].setMax(length.value);
//             this.paramLoop     .controls[0].setMax(length.value);
//         }
//         else
//         {
//             this.paramCondition.controls[0].setMax();
//             this.paramLoop     .controls[0].setMax();
//         }
//     }



//     updateParams()
//     {
//         this.paramCondition.enableControlText(true);
//         this.paramLoop     .enableControlText(true);

//         this.updateParamControls();
//     }
// }