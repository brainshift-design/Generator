:root 
{
    --windowBorderWidth: 8px;
    --sizeBorderWidth:   4px;
    --defHeaderHeight:   25px;
    /* --cornerBack:     #0f08;
    --edgeBack:          #08f8; */
    --cornerBack:        none;
    --edgeBack:          none;
}


.node
{
    display:       none;
    position:      absolute;
    height:        auto;
    border-radius: 4px 4px 0 0;
    padding:       0;
    overflow:      visible;
    /* box-shadow:    0 0 0 1px yellow inset; */
}


.nodeInner
{
    display:       block;
    position:      relative;
    width:         100%;
    height:        auto;
    overflow:      hidden;
    border-radius: 4px 4px 0 0;
    padding:       0;
    /* box-shadow:    0 0 0 1px orange inset; */
}    


.nodeHeader
{
    /* background:   'magenta'; */
    display:       flex;
    width:         100%;
    position:      relative;
    border-radius: 4px 4px 0 0;
    z-index:       10000;
 /* overflow:      visible; */
 /* box-shadow:    0 0 0 1px red inset; */
}


.nodeHeaderCheckersHolder
{
    display:       inline-block;
    width:         100%;
    height:        100%;
    position:      absolute;
    left:          0;
    top:           0; 
    z-index:       1;
    overflow:      hidden;
    border-radius: 4px 4px 0 0;
    pointer-events: none;
    /* box-shadow:    0 0 0 1px red inset; */
}


.nodeHeaderCheckers
{
    display:       inline-block;
    width:         100%;
    height: 100%;
    position:      absolute;
    left:          0;
    top:           0; 
    border-radius: 4px 4px 0 0;
    pointer-events: none;
    /* box-shadow:    0 0 0 1px blue inset; */
}


.nodeParamBack
{
    display:        flex;
    flex-direction: column;
    position:       relative;
    z-index:        2000;
    /* box-shadow:  0 0 0 1px magenta inset; */
}


.nodeHiddenParamBack
{
    display:     block;
    position:    absolute;
    width:       100%;
    background:  #fffe;
    z-index:    -1;
 /* box-shadow:  0 0 0 1px green inset; */
}


/* .paramSeparator
{
    display:    inline-block;
    width:      100%;
    height:     10;
    background: #fffe;
 /* box-shadow: 0 0 0 1px green inset;
} */


.nodeLabelWrapper
{
    position:          absolute;
    width:             100%;
    height:            100%;   
    overflow:          hidden;
    /* box-shadow: 0 0 0 1px blue inset; */
}


.nodeLabel
{
    padding:        0;
    margin:         0;
    display:        block;
    width:          auto;
    height:         auto;
    position:       absolute;
    /* pointer-events: none; */
    z-index:        1000;
    white-space:    nowrap;
    font-weight:    600;
    /* box-shadow:     0 0 0 1px magenta inset; */
}


.nodeLabel a
{
    -webkit-user-drag: none;
}


.nodeIcon
{
    display:       inline;
    width:         19px;
    height:        19px;
    margin-right:  7px;
    position:      relative;
    pointer-events: none;
    /* box-shadow:   0 0 0 1px red inset; */
}


.headerIcon
{
    width:          14px;
    height:         14px;
    position:       absolute;
    left:           50%;
    top:            50%;
    transform:      translateX(-50%)
                    translateY(-50%);
    pointer-events: none;
}    


.nodeLabelText
{
    font-family:    Inter;
    font-size:      11px;
    padding:        0;
    margin:         0;
    display:        inline;
    width:          auto;
    height:         15px;
    text-align:     center;
    white-space:    nowrap;
    vertical-align: top;
    left:           50%;
    text-rendering: geometricPrecision;
    /* box-shadow:     0 0 0 1px orange inset; */
}


.nodeLabelTextbox
{
    font-family: Inter;
    font-size:   11;
 /* box-shadow:  0 0 0 1px #a0a inset; */
    overflow:    visible;
}


.nodeLabelTextbox::selection
{
    background-color: white;
}


.proCover
{
    background: transparent;
    position:   absolute;
    left:       0;
    width:      100%;
    z-index:    100000;
    display:    none;
}



.proLabel
{
    font-family:    Inter;
    font-size:      26px;
    font-weight:    700;
    color:          var(--figma-color-bg-brand);
    opacity:        50%;
    position:       absolute;
    left:           50%;
    top:            50%;
    pointer-events: none;
    z-index:        100000;
    transform:      translateX(-50%)
                    translateY(-50%)
                    rotate(-45deg);
    display:        none;
    padding-left:   8px;
    padding-right:  8px;
    padding-top:    4px;
    padding-bottom: 4px;
    border-radius:  8px;
    box-shadoW:     0 0 0 1px var(--figma-color-bg-brand) inset;
}


/* .proLabel
{
    font-family:    Inter;
    font-size:      16px;
    font-weight:    700;
    color:          #e88b;
    position:       absolute;
    left:           50%;
    top:            50%;
    pointer-events: none;
    z-index:        100000;
    transform:      translateX(-50%)
                    translateY(-50%)
                    rotate(-45deg);
    display:        none;
}

 */
.colorWarningOverlay
{
    width:            100%;
    z-index:          100;
    position:         absolute;
    top:              0;
    pointer-events:   none;
    border-radius:    4px 4px 0 0;
}


.colorValueWarningOverlay
{
    width:            100%;
    z-index:          50;
    position:         absolute;
    top:              0;
    height:           var(--colorBackSize);
    pointer-events:   none;
}


.colorBack
{
    width:            100%;
    /* height:           var(--colorBackSize); */
    z-index:          0;
    position:         absolute;
    top:              0;
    pointer-events:   none;
    border-radius:    4px 4px 0 0;
}


.txtOrder
{
    text-align:  center;
    width:       100%;
    background:  transparent;
    cursor:      default;
}


.txtOrder:hover
{
    box-shadow: 0  1px 0 0 rgba(0, 0, 0, 0.1) inset,
                0 -1px 0 0 rgba(0, 0, 0, 0.1) inset;
}


.findCorrectColorion
{
    display:             block;
    width:               10px;
    height:              10px;
    position:            absolute;
    left:                50%;
    top:                 50%;
    transform:           translateX(-50%)
                         translateY(-50%);
 /* box-shadow:          0 0 0 1 red inset; */
    background:          url('data:image/svg+xml;utf8,<svg width="10" height="10" viewBox="0 0 12 12" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M8.10345 5.05172C8.10345 7.01329 6.51329 8.60345 4.55172 8.60345C2.59016 8.60345 1 7.01329 1 5.05172C1 3.09016 2.59016 1.5 4.55172 1.5C6.51329 1.5 8.10345 3.09016 8.10345 5.05172ZM7.39723 8.60458C6.61787 9.22958 5.62846 9.60345 4.55172 9.60345C2.03788 9.60345 0 7.56557 0 5.05172C0 2.53788 2.03788 0.5 4.55172 0.5C7.06557 0.5 9.10345 2.53788 9.10345 5.05172C9.10345 6.12858 8.72949 7.1181 8.10436 7.8975L11.3535 11.1467L10.6464 11.8538L7.39723 8.60458Z" fill="black" fill-opacity="0.8"/></svg>');
    background-position: 50% 50%;
    background-repeat:   no-repeat;
}


.progressWrapper
{
    position:      absolute;
    left:          0;
    top:           0;
    width:         100%;
    height:        6px;   
    background:    transparent;
 /* border-radius: 2.5px; */
    border-radius: 4px 4px 0 0;
    overflow:      hidden;
    display:       none;
}


.progressBar
{
    position:   absolute;
    left:       0;
    top:        0;
    width:      0;
    height:     5px;   
    background: var(--figma-color-bg-brand);
}


.asterisk
{
    font-size: 8px;
    position:  relative;
    top:       -2px;
}


.btnAnimatePlay
{
    width:          15px;
    height:         15px;
    margin-right:   6px;
    pointer-events: all;
}


.btnRenderFinal
{
    width:          20px;
    height:         17px;
    margin-right:   6px;
    pointer-events: all;
}


.styleCircleWrapper
{
    display:        inline-block;
    width:          16px;
    height:         16px;
    border-radius:   8px;
    margin-right:    7px;
    position:       relative;
    top:           -1px;
    pointer-events: all;
    overflow:       hidden;
}


.styleCircleBack
{
    width:          16px;
    height:         16px;
    pointer-events: none;
    position:       absolute;
    left:           0;
    top:            0;
}


.styleCircleCheckers
{
    width:          16px;
    height:         8px;
    pointer-events: none;
    position:       absolute;
    left:           0;
    top:            0;
    transform:      rotate(45deg);
    transform-origin: 50% 100%;
}


.styleCircle
{
    display:        inline-block;
    width:          16px;
    height:         16px;
    position:       absolute;
    left:           0;
    top:            0;
}


.styleLink
{
    width:          16px;
    height:         16px;
    pointer-events: none;
    position:       absolute;
    left:           50%;
    top:            50%;
    transform:      translateX(-50%)
                    translateY(-50%);
}    


.btnCircleWrapper
{
    display:        inline-block;
    width:          16px;
    height:         16px;
    border-radius:   8px;
    margin-right:    7px;
    position:       relative;
    top:           -1px;
    pointer-events: all;
    overflow:       hidden;
}


.btnCircleBack
{
    width:          16px;
    height:         16px;
    pointer-events: none;
    position:       absolute;
    left:           0;
    top:            0;
}


.btnCircle
{
    display:        inline-block;
    width:          16px;
    height:         16px;
    position:       absolute;
    left:           0;
    top:            0;
}


.btnLink
{
    width:          16px;
    height:         16px;
    pointer-events: none;
    position:       absolute;
    left:           50%;
    top:            50%;
    transform:      translateX(-50%)
                    translateY(-50%);
}    


.headerCircleWrapper
{
    display:        inline-block;
    width:          16px;
    height:         16px;
    /* border-radius:   8px; */
    margin-right:    3px;
    position:       relative;
    top:           -1px;
    pointer-events: all;
    overflow:       hidden;
}


.headerCircleBack
{
    width:          16px;
    height:         16px;
    pointer-events: none;
    position:       absolute;
    left:           0;
    top:            0;
}


.headerCircle
{
    display:        inline-block;
    width:          16px;
    height:         16px;
    position:       absolute;
    left:           0;
    top:            0;
}


.reorderArrows
{
    width:    5px;
    height:   8px;
    position: absolute;
    left:     0;
    top:      0;
}


.colorblindSymbol
{
    position:  absolute;
    width:     26px;
    height:    26px;
    left:      50%;
    top:       33%;
    transform: translateX(-50%)
               translateY(-50%);
}


.colorblindRing
{
    position:  absolute;
    left:      50%;
    top:       50%;
    transform: translateX(-50%)
               translateY(-50%);
}


.sizerEdge
{
    position:   absolute;
    background: var(--edgeBack);
    z-index:    10000;
    /* box-shadow: 0 0 0 1px green inset; */
}


.sizerH
{
    top:    var(--defHeaderHeight);
    /* top:    var(--sizeBorderWidth); */
    /* height: calc(100% - calc(2 * var(--sizeBorderWidth))); */
    width:  var(--sizeBorderWidth);
    height: calc(100% - calc(25px + var(--sizeBorderWidth)));
    cursor: ew-resize;
}


.sizerL { left:  0; }
.sizerR { right: 0; }


.sizerV
{
    left:   var(--sizeBorderWidth);
    width:  calc(100% - calc(2 * var(--sizeBorderWidth)));
    height: var(--sizeBorderWidth);
    cursor: ns-resize;
}


.sizerT { top:    0; }
.sizerB { bottom: 0; }


.sizerCorner
{
    position:   absolute;
    width:      var(--sizeBorderWidth);
    height:     var(--sizeBorderWidth);
    background: var(--cornerBack);
    z-index:    10000;
    /* box-shadow: 0 0 0 1px yellow inset; */
}


.sizerTL
{
    left:   0;
    top:    0;
    cursor: nwse-resize;
}


.sizerTR
{
    right:  0;
    top:    0;
    cursor: nesw-resize;
}


.sizerBL
{
    left:   0;
    bottom: 0;
    cursor: nesw-resize;
}


.sizerBR
{
    right:  0;
    bottom: 0;
    cursor: nwse-resize;
}


.itemsScroll
{
    display:       block;
    position:      absolute;
    width:         6px;
    height:        100px;
    border-radius: 3px;
    z-index:       10000;
}


.figma-light .itemsScroll       { background: #0002; }
.figma-dark  .itemsScroll       { background: #fff2; }
 
.figma-light .itemsScroll:hover { background: #0004; }
.figma-dark  .itemsScroll:hover { background: #fff4; }


.arrowHandle
{
    position:      absolute;
    background:    red;
}