//const MAX_NODES   = 0x10000;

//const objNodes    = new Array(MAX_NODES).fill(null);

//var   minNodeId   = Number.MAX_SAFE_INTEGER;
//var   maxNodeId   = Number.MIN_SAFE_INTEGER;


//figma.on('selectionchange', figOnSelectionChange);

figma.on('documentchange', figOnDocumentChange);
figma.on('close',          figOnPluginClose);


figma.showUI(
    __html__,
    {
        visible:     false,
        themeColors: true
    });



function figStartGenerator()
{
    (async function()
    {
        let productKey = await figLoadLocal('productKey');
        if (productKey == null) productKey = '';

        
        let wndWidth  = await figma.currentPage.getPluginData(figma.currentUser.id+',windowWidth');
        let wndHeight = await figma.currentPage.getPluginData(figma.currentUser.id+',windowHeight');

        if (wndWidth  === NULL) { wndWidth  = 800; figma.currentPage.setPluginData(figma.currentUser.id+',windowWidth',  wndWidth .toString()); } else wndWidth  = parseInt(wndWidth );
        if (wndHeight === NULL) { wndHeight = 600; figma.currentPage.setPluginData(figma.currentUser.id+',windowHeight', wndHeight.toString()); } else wndHeight = parseInt(wndHeight);

        
        figma.ui.resize(
            Math.max(0, wndWidth),
            Math.max(0, wndHeight));

        figma.ui.show();

        
        figPostMessageToUi({
            cmd:        'uiReturnFigStartGenerator',
            currentUser: figma.currentUser,
            productKey:  productKey });
    })();
}