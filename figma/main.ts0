const OBJ_RECT    = 1;

const MAX_OBJECTS = 0x10000;
const MAX_NODES   = 0x10000;

const objNodes    = new Array(MAX_NODES).fill(null);

var   minNodeId   = Number.MAX_SAFE_INTEGER;
var   maxNodeId   = Number.MIN_SAFE_INTEGER;


// const objects  = new Array(MAX_OBJECTS);
// var   maxObjId = -1;


figma.on('selectionchange', figOnSelectionChange);
figma.on('close',           figOnPluginClose);

figma.showUI(__html__);



// from UI <--
///////////////////////////////////////////////////////////////////////////////////////////////////

figma.ui.onmessage = msg => 
{
    switch (msg.cmd)
    {
        case 'figLoadState':         figLoadState        (msg);                             break;
        case 'figResizeWindow':      figResizeWindow     (msg);                             break; 
        case 'figSaveLocal':         figSaveLocal        (msg.key, msg.value);              break;
        case 'figSetPluginData':     figSetPluginData    (msg.key, msg.value);              break;
        case 'figDeleteNodeObjects': figDeleteNodeObjects(msg.nodeIds);                     break; 
        case 'figUpdateObjects':     figUpdateObjects    (msg);                             break;
        case 'figNotify':            figNotify           (msg.text, msg.prefix, msg.delay); break;
    }
};

///////////////////////////////////////////////////////////////////////////////////////////////////



// to UI -->
function figPostMessageToUi(msg)
{
    figma.ui.postMessage(msg);
}



// to Generator -->
function figPostToGenerator(msg)
{
    figPostMessageToUi({
        cmd: 'uiForwardToGen',
        msg:  msg
    });
}



///////////////////////////////////////////////////////////////////////////////////////////////////



function figLoadState(msg)
{
    (async function()
    {
        // load state
        var state = await figma.clientStorage.getAsync('state');
        if (state == null) state = {};
        // ...


        // resize window
        let wndWidth  = await figma.clientStorage.getAsync('windowWidth');
        let wndHeight = await figma.clientStorage.getAsync('windowHeight');

        if (wndWidth  == null) wndWidth  = 400;
        if (wndHeight == null) wndHeight = 300;

        figma.ui.resize(
            Math.max(0, wndWidth),
            Math.max(0, wndHeight));

        // load product key
        let productKey = await figLoadLocal('productKey');
        if (productKey == null) productKey = '';


        // end load state
        figPostMessageToUi({
            cmd:        'uiEndLoadState',
            currentUser: figma.currentUser,
            productKey:  productKey });
    })();
}