function genShapeGroupIsValid(genGroup)
{
    return genGroup[FO_GROUP_CHILDREN].length > 0;
}



async function figCreateShapeGroup(genGroup)
{
    let objects = [];

    for (const obj of genGroup[FO_GROUP_CHILDREN])
        await figCreateObject(obj, o => objects = [...objects, o]);


    const figGroup = 
        !isEmpty(objects)
        ? figma.group(objects, figma.currentPage)
        : null;

    if (figGroup)
    {
        //setObjectTransform(figGroup, genGroup);

        if (!genShapeGroupIsValid(genGroup))
            return figGroup;
    }


    return figGroup;
}



function figUpdateShapeGroup(figGroup, genGroup)
{
    if (!genShapeGroupIsValid(genGroup))
    {
        figGroup.remove();
        return;
    }

    figUpdateObjects(figGroup, genGroup[FO_GROUP_CHILDREN]);
}
