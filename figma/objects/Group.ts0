function genShapeGroupIsValid(genGroup)
{
    return true;//genGroup[FO_GROUP_CHILDREN].length > 0;
}



async function figCreateShapeGroupAsync(genGroup)
{
    let objects = [];

    for (const obj of genGroup[FO_GROUP_CHILDREN])
        await figCreateObject(obj, o => objects = [...objects, o]);


    await figma.currentPage.loadAsync();
    
    const figGroup = 
        !isEmpty(objects)
        ? figma.group(objects, figma.currentPage)
        : null;


    if (figGroup)
    {
        figGroup.expanded = false;
        figUpdateShapeGroup(figGroup, genGroup);
    }


    return figGroup;
}



function figUpdateShapeGroup(figGroup, genGroup)
{
    if (genGroup[FO_GROUP_CHILDREN].length == 0)
    {
        figGroup.remove();
        return;
    }


    figUpdateObjects(
        figGroup, 
        genGroup[FO_GROUP_CHILDREN],
        genGroup[FO_GROUP_CHILDREN].length);

        
    setObjectEffects(figGroup, genGroup);
}
