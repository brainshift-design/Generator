function genPolygonIsValid(genPoly)
{
    return genPoly[FO_X           ] != null && !isNaN(genPoly[FO_X           ])
        && genPoly[FO_Y           ] != null && !isNaN(genPoly[FO_Y           ])
        && genPoly[FO_WIDTH       ] != null && !isNaN(genPoly[FO_WIDTH       ])
        && genPoly[FO_HEIGHT      ] != null && !isNaN(genPoly[FO_HEIGHT      ])
        && genPoly[FO_POLY_ROUND  ] != null && !isNaN(genPoly[FO_POLY_ROUND  ])
        && genPoly[FO_POLY_CORNERS] != null && !isNaN(genPoly[FO_POLY_CORNERS]);
}



function figCreatePolygon(genPoly, addProps, transform)
{
    if (!genPolygonIsValid(genPoly))
        return null;

        
    const figPoly = figma.createPolygon();

    figUpdatePolygon(figPoly, genPoly, addProps, transform, true);

    return figPoly;
}



function figUpdatePolygon(figPoly, genPoly, addProps, transform, isValid = false)
{
    if (   !isValid
        && !genPolygonIsValid(genPoly))
        return;

        
    figPoly.cornerRadius = genPoly[FO_POLY_ROUND];
    figPoly.pointCount   = Math.max(3, genPoly[FO_POLY_CORNERS]);


    if (transform)
        setObjectTransform(figPoly, genPoly);
    
    setObjectProps(figPoly, genPoly, addProps);
}
