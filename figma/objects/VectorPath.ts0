
function genVectorPathIsValid(genPath)
{
    return genPath[FO_VECTOR_PATH_WINDING] != null && !isNaN(genPath[FO_VECTOR_PATH_WINDING])
        && genPath[FO_VECTOR_PATH_ROUND  ] != null && !isNaN(genPath[FO_VECTOR_PATH_ROUND  ]);
}



function figCreateVectorPath(genPath, addProps, transform)
{
    const figPath = figma.createVector();

    figUpdateVectorPath(figPath, genPath, addProps, transform, true);

    return figPath;
}



function figUpdateVectorPath(figPath, genPath, addProps, transform, isValid = false)
{
    if (   !isValid
        && !genVectorPathIsValid(genPath))
        return;


    figPath.vectorPaths = [{
        windingRule: genPath[FO_VECTOR_PATH_WINDING] == 1 ? 'NONZERO' : 'EVENODD',
        data:        genPath[FO_VECTOR_PATH_DATA   ]
    }];


    console.log('genPath[FO_VECTOR_PATH_ROUND] =', genPath[FO_VECTOR_PATH_ROUND]);
    figPath.cornerRadius = genPath[FO_VECTOR_PATH_ROUND];
    

    if (transform)
        setObjectTransform(figPath, genPath, false);
    
    setObjectProps(figPath, genPath, addProps);
}