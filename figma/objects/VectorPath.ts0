
function genVectorPathIsValid(genPath)
{
    return genPath[FO_VECTOR_PATH_WINDING] != null && !isNaN(genPath[FO_VECTOR_PATH_WINDING])
        && genPath[FO_VECTOR_PATH_ROUND  ] != null && !isNaN(genPath[FO_VECTOR_PATH_ROUND  ]);
}



function figCreateVectorPath(genPath)
{
    const figPath = figma.createVector();

    figUpdateVectorPath(figPath, genPath);

    return figPath;
}



function figUpdateVectorPath(figPath, genPath)
{
    if (!genVectorPathIsValid(genPath))
        return;


    figPath.vectorPaths = [{
        windingRule: genPath[FO_VECTOR_PATH_WINDING] == 1 ? 'NONZERO' : 'EVENODD',
        data:        genPath[FO_VECTOR_PATH_DATA   ]
    }];


    figPath.cornerRadius = genPath[FO_VECTOR_PATH_ROUND];
    

    setObjectTransform(figPath, genPath, false);
    setObjectProps    (figPath, genPath);


    actualObjectCount++;
}

