// from UI <--
///////////////////////////////////////////////////////////////////////////////////////////////////

figma.ui.onmessage = msg => 
{
    //figma.notify(msg.cmd);
    console.log(msg.cmd);
    switch (msg.cmd)
    {
        case 'figLoadState':         figLoadState        (msg);                             break;
        case 'figResizeWindow':      figResizeWindow     (msg.width, msg.height);           break; 
        case 'figSaveLocal':         figSaveLocal        (msg.key, msg.value);              break;
        case 'figGetPluginData':     figGetPluginData    (msg.key);                         break;
        case 'figSetPluginData':     figSetPluginData    (msg.key, msg.value);              break;
        case 'figDeleteNodeObjects': figDeleteNodeObjects(msg.nodeIds);                     break; 
        case 'figUpdateObjects':     figUpdateObjects    (msg.objects);                     break;
        case 'figNotify':            figNotify           (msg.text, msg.prefix, msg.delay); break;
    }

    figPostMessageToUi({cmd: 'uiFigMsgReceived'});
}

///////////////////////////////////////////////////////////////////////////////////////////////////



// to UI -->
function figPostMessageToUi(msg)
{
    figma.ui.postMessage(msg);
}



// to Generator -->
function figPostToGenerator(msg)
{
    figPostMessageToUi({
        cmd: 'uiForwardToGen',
        msg:  msg
    });
}



///////////////////////////////////////////////////////////////////////////////////////////////////